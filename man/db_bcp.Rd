% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bcp.r
\name{db_bcp}
\alias{db_bcp}
\title{Write data.frame to database using bcp}
\usage{
db_bcp(data, table, conn = NULL, truncate = FALSE,
  preserve_empty_strings = TRUE, sep = "^|~", eol = "^|\\r\\n",
  paranoid = FALSE, preserve_memory = FALSE, tmp_dir = ".",
  tmp_keep_files = FALSE)
}
\arguments{
\item{data}{data.frame to be written to database. Column names must match with those in the database table.}

\item{table}{character string naming the table to write to. Can include database and schema name (database_name.schema_name.table_name).}

\item{conn}{RODBC connection object as returned by db_connect(). Optional, but allows to re-use an already open connection to check columns and truncate table (if \code{truncate} is \code{TRUE}).}

\item{truncate}{logical. If \code{TRUE}, the table will be truncated prior to writing data.}

\item{preserve_empty_strings}{logical. If \code{TRUE}, empty strings in the data will be preserved by importing a dummy string and then updating the table afterwards. Otherwise empty strings will be imported as NULLs.}

\item{sep}{character string to use as column separater when writing the data file passed to the bcp utility. Make sure this string does not exist in the data.}

\item{eol}{character string to use as end of line separater when writing the data file passed to the bcp utility. Make sure this string does not exist in the data.}

\item{paranoid}{logical. If \code{TRUE}, existing separator and EOL strings will be removed in the data. This may be a bit slow, so it's better to choose parameters \code{sep} and \code{eol} carefully.}

\item{preserve_memory}{logical. If \code{TRUE} and a data.table is passed as \code{data}, the object will not be copied in memory. The original data.table may then be changed by this function.}

\item{tmp_dir}{character string}

\item{tmp_keep_files}{logical}
}
\description{
Write data.frame to database using bcp
}
